[{"fragment":"why-is-there-a-node_modules-folder-in-src","answer":"<p>Before bundling your app, Sapper builds a special package for your app, which you can access by importing from <code>@sapper/app</code>. Putting it inside <code>src/node_modules</code> means that it won&#39;t get nuked when you add new dependencies, and that you can easily import from it using the Node resolution algorithm.</p>\n","metadata":{"question":"Why is there a node_modules folder in the src folder of a Sapper project?"}},{"fragment":"webpack-vs-rollup","answer":"<p>Sapper offers both Rollup and Webpack templates. If you don&#39;t have a strong reason to prefer one over the other, we&#39;d recommend using the Rollup template. The Rollup implementation supports additional features such as improved tree-shaking for smaller bundles, the ability to <a href=\"../docs#Browser_support\" rel=\"noopener noreferrer\">serve a legacy bundle to older browsers</a>, and it automatically lists all your <code>.js</code> and <code>.css</code> files in the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Link\" target=\"_blank\" rel=\"noopener noreferrer\"><code>Link</code> header</a> to <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types/preload\" target=\"_blank\" rel=\"noopener noreferrer\">preload</a> those files.</p>\n","metadata":{"question":"Should I use Webpack or Rollup with Sapper?"}}]